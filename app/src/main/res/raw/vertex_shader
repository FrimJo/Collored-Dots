uniform int u_Time;
uniform float u_PointSize;
uniform mat4 u_MVPMatrix;
attribute vec4 a_Position;
attribute vec4 a_Color;
attribute vec2 a_Velocity;
varying vec4 v_Color;
void main() {
	v_Color = a_Color;
	vec2 velocity = a_Velocity * (u_Time * 0.001);
	vec4 column0 = vec4(1.0, 0.0, 0.0, 0.0);
	vec4 column1 = vec4(0.0, 1.0, 0.0, 0.0);
	vec4 column2 = vec4(0.0, 0.0, 1.0, 0.0);
	vec4 column3 = vec4(velocity.x, velocity.y, 0.0, 1.0);
	mat4 n = mat4(column0, column1, column2, column3);
	n[3] = vec4(velocity.x, velocity.y, 0.0, 1.0);
	gl_Position = u_MVPMatrix * n * a_Position;
	gl_PointSize = u_PointSize;
}